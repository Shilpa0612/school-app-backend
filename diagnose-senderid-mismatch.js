import dotenv from 'dotenv';
import { adminSupabase } from './src/config/supabase.js';

dotenv.config();

async function diagnoseSenderIdMismatch() {
    try {
        console.log('üîç Diagnosing SenderId Mismatch Error');
        console.log('=====================================');
        console.log('');

        console.log('1. üìã Backend Firebase Configuration:');
        console.log(`   FIREBASE_PROJECT_ID: ${process.env.FIREBASE_PROJECT_ID}`);
        console.log(`   FIREBASE_CLIENT_EMAIL: ${process.env.FIREBASE_CLIENT_EMAIL}`);
        console.log(`   FIREBASE_PRIVATE_KEY_ID: ${process.env.FIREBASE_PRIVATE_KEY_ID ? 'Set' : 'Missing'}`);
        console.log(`   FIREBASE_PRIVATE_KEY: ${process.env.FIREBASE_PRIVATE_KEY ? 'Set' : 'Missing'}`);
        console.log('');

        console.log('2. üîç Checking Device Tokens:');
        const { data: tokens, error } = await adminSupabase
            .from('user_device_tokens')
            .select('device_token, platform, user_id, created_at')
            .eq('is_active', true)
            .limit(5);

        if (error) {
            console.log('   ‚ùå Error fetching tokens:', error.message);
            return;
        }

        console.log(`   Found ${tokens.length} active tokens:`);
        tokens.forEach((token, index) => {
            console.log(`   ${index + 1}. Platform: ${token.platform}`);
            console.log(`      Token: ${token.device_token.substring(0, 50)}...`);
            console.log(`      User: ${token.user_id}`);
            console.log(`      Created: ${token.created_at}`);
            console.log('');
        });

        console.log('3. üö® SenderId Mismatch Analysis:');
        console.log('');
        console.log('   This error means:');
        console.log('   - Your backend Firebase project ‚â† Mobile app Firebase project');
        console.log('   - The device tokens were generated by a different Firebase project');
        console.log('   - FCM cannot deliver to tokens from a different project');
        console.log('');

        console.log('4. üîß How to Fix:');
        console.log('');
        console.log('   A) Check your mobile app google-services.json:');
        console.log('      - Download from Firebase Console ‚Üí Project Settings ‚Üí Your App');
        console.log('      - NOT from Google Cloud Console');
        console.log('      - Must match your backend FIREBASE_PROJECT_ID');
        console.log('');
        console.log('   B) Verify backend .env matches mobile app:');
        console.log('      - FIREBASE_PROJECT_ID should match google-services.json project_id');
        console.log('      - Service Account should be from the same project');
        console.log('');
        console.log('   C) Rebuild and re-register tokens:');
        console.log('      - Delete old tokens from database');
        console.log('      - Rebuild mobile app with correct google-services.json');
        console.log('      - Re-register device tokens');
        console.log('');

        console.log('5. üß™ Quick Test Commands:');
        console.log('');
        console.log('   # Check current project ID in .env');
        console.log('   echo $FIREBASE_PROJECT_ID');
        console.log('');
        console.log('   # Clean up old tokens (run this after fixing config)');
        console.log('   curl -X POST http://localhost:3000/api/device-tokens/cleanup-duplicates \\');
        console.log('     -H "Authorization: Bearer YOUR_JWT_TOKEN"');
        console.log('');

        console.log('6. üì± Mobile App Checklist:');
        console.log('');
        console.log('   ‚úÖ google-services.json is in android/app/');
        console.log('   ‚úÖ google-services.json project_id matches backend');
        console.log('   ‚úÖ App rebuilt after adding google-services.json');
        console.log('   ‚úÖ Device tokens re-registered after rebuild');
        console.log('   ‚úÖ Firebase project has FCM enabled');
        console.log('');

        console.log('‚úÖ Diagnosis complete!');
        console.log('');
        console.log('üí° Next Steps:');
        console.log('1. Download correct google-services.json from Firebase Console');
        console.log('2. Replace the file in your mobile app');
        console.log('3. Rebuild your mobile app');
        console.log('4. Re-register device tokens');
        console.log('5. Test notifications again');

    } catch (error) {
        console.error('‚ùå Diagnosis failed:', error);
    }
}

diagnoseSenderIdMismatch();
